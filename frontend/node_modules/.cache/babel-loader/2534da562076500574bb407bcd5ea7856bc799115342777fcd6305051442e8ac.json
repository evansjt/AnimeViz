{"ast":null,"code":"var _jsxFileName = \"/Users/evansjt/Documents/JHU/Data Visualization/Final Project/code/frontend/src/TemporalDataViz.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvgAnimeMembershipPerYear() {\n  var data = [];\n  function plotData(avgMemberData) {\n    for (let mediaType in avgMemberData) {\n      data.push({\n        x: avgMemberData[mediaType]['Years'],\n        y: avgMemberData[mediaType]['Average Members'],\n        showlegend: true,\n        name: mediaType === 'OVA' || mediaType === 'ONA' ? `${mediaType}*` : mediaType,\n        type: 'scatter',\n        fill: 'none',\n        mode: 'lines+markers',\n        line: {\n          width: 3\n        },\n        hovertemplate: `<b>${mediaType} - %{x}</b><br><i>Avg. members</i>: %{y}<extra></extra>`\n      });\n    }\n  }\n  const layout = {\n    title: 'Average Membership of Anime Media Released per Year',\n    xaxis: {\n      title: 'Year'\n    },\n    yaxis: {\n      title: '# of Avg. members'\n    },\n    legend: {\n      title: {\n        text: \"<b>Media Types<b>\",\n        font: {\n          size: 14\n        },\n        side: \"top\"\n      },\n      orientation: \"h\",\n      bgcolor: '#E2E2E2',\n      bordercolor: '#FFFFFF',\n      borderwidth: 2\n    },\n    annotations: [{\n      xref: 'paper',\n      yref: 'paper',\n      xanchor: 'left',\n      yanchor: 'bottom',\n      x: 0,\n      y: 1,\n      text: '<i>OVA* = Original video animation (direct-to-video anime)</i><br><i>ONA* = Original net animation (direct-to-internet anime)</i>',\n      font: {\n        size: 10\n      },\n      align: 'left',\n      showarrow: false\n    }]\n  };\n  axios.get(\"http://localhost:5000/avg_membership_per_yr\", {\n    crossdomain: true\n  }).then(res => {\n    plotData(res.data);\n    Plotly.newPlot('temporal-data-viz', data, layout);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"temporal-data-viz\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_c = AvgAnimeMembershipPerYear;\nexport default AvgAnimeMembershipPerYear;\nvar _c;\n$RefreshReg$(_c, \"AvgAnimeMembershipPerYear\");","map":{"version":3,"names":["React","axios","AvgAnimeMembershipPerYear","data","plotData","avgMemberData","mediaType","push","x","y","showlegend","name","type","fill","mode","line","width","hovertemplate","layout","title","xaxis","yaxis","legend","text","font","size","side","orientation","bgcolor","bordercolor","borderwidth","annotations","xref","yref","xanchor","yanchor","align","showarrow","get","crossdomain","then","res","Plotly","newPlot"],"sources":["/Users/evansjt/Documents/JHU/Data Visualization/Final Project/code/frontend/src/TemporalDataViz.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nfunction AvgAnimeMembershipPerYear() {\n    var data = [];\n\n    function plotData(avgMemberData) {\n        for (let mediaType in avgMemberData) {\n            data.push({\n                x: avgMemberData[mediaType]['Years'],\n                y: avgMemberData[mediaType]['Average Members'],\n                showlegend: true,\n                name: mediaType === 'OVA' || mediaType === 'ONA' ? `${mediaType}*` : mediaType,\n                type: 'scatter',\n                fill: 'none',\n                mode: 'lines+markers',\n                line: {\n                    width: 3\n                },\n                hovertemplate: `<b>${mediaType} - %{x}</b><br><i>Avg. members</i>: %{y}<extra></extra>`\n            });\n        }\n    }\n\n    const layout = {\n        title: 'Average Membership of Anime Media Released per Year',\n        xaxis: {\n            title: 'Year'\n        },\n        yaxis: {\n            title: '# of Avg. members'\n        },\n        legend: {\n            title: {\n                text: \"<b>Media Types<b>\",\n                font: {\n                    size: 14\n                },\n                side: \"top\"\n            },\n            orientation: \"h\",\n            bgcolor: '#E2E2E2',\n            bordercolor: '#FFFFFF',\n            borderwidth: 2\n        },\n        annotations: [\n            {\n                xref: 'paper',\n                yref: 'paper',\n                xanchor: 'left',\n                yanchor: 'bottom',\n                x: 0,\n                y: 1,\n                text: '<i>OVA* = Original video animation (direct-to-video anime)</i><br><i>ONA* = Original net animation (direct-to-internet anime)</i>',\n                font: {\n                    size: 10\n                },\n                align: 'left',\n                showarrow: false\n            }\n        ]\n    };\n\n    axios.get(\"http://localhost:5000/avg_membership_per_yr\", { crossdomain: true }).then(res => {\n        plotData(res.data);\n        Plotly.newPlot('temporal-data-viz', data, layout);\n    });\n\n    return (\n        <div id=\"temporal-data-viz\"></div>\n    );\n}\n\nexport default AvgAnimeMembershipPerYear;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,yBAAyB,GAAG;EACjC,IAAIC,IAAI,GAAG,EAAE;EAEb,SAASC,QAAQ,CAACC,aAAa,EAAE;IAC7B,KAAK,IAAIC,SAAS,IAAID,aAAa,EAAE;MACjCF,IAAI,CAACI,IAAI,CAAC;QACNC,CAAC,EAAEH,aAAa,CAACC,SAAS,CAAC,CAAC,OAAO,CAAC;QACpCG,CAAC,EAAEJ,aAAa,CAACC,SAAS,CAAC,CAAC,iBAAiB,CAAC;QAC9CI,UAAU,EAAE,IAAI;QAChBC,IAAI,EAAEL,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,KAAK,GAAI,GAAEA,SAAU,GAAE,GAAGA,SAAS;QAC9EM,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE;UACFC,KAAK,EAAE;QACX,CAAC;QACDC,aAAa,EAAG,MAAKX,SAAU;MACnC,CAAC,CAAC;IACN;EACJ;EAEA,MAAMY,MAAM,GAAG;IACXC,KAAK,EAAE,qDAAqD;IAC5DC,KAAK,EAAE;MACHD,KAAK,EAAE;IACX,CAAC;IACDE,KAAK,EAAE;MACHF,KAAK,EAAE;IACX,CAAC;IACDG,MAAM,EAAE;MACJH,KAAK,EAAE;QACHI,IAAI,EAAE,mBAAmB;QACzBC,IAAI,EAAE;UACFC,IAAI,EAAE;QACV,CAAC;QACDC,IAAI,EAAE;MACV,CAAC;MACDC,WAAW,EAAE,GAAG;MAChBC,OAAO,EAAE,SAAS;MAClBC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IACjB,CAAC;IACDC,WAAW,EAAE,CACT;MACIC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,OAAO;MACbC,OAAO,EAAE,MAAM;MACfC,OAAO,EAAE,QAAQ;MACjB3B,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJc,IAAI,EAAE,mIAAmI;MACzIC,IAAI,EAAE;QACFC,IAAI,EAAE;MACV,CAAC;MACDW,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE;IACf,CAAC;EAET,CAAC;EAEDpC,KAAK,CAACqC,GAAG,CAAC,6CAA6C,EAAE;IAAEC,WAAW,EAAE;EAAK,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;IACxFrC,QAAQ,CAACqC,GAAG,CAACtC,IAAI,CAAC;IAClBuC,MAAM,CAACC,OAAO,CAAC,mBAAmB,EAAExC,IAAI,EAAEe,MAAM,CAAC;EACrD,CAAC,CAAC;EAEF,oBACI;IAAK,EAAE,EAAC;EAAmB;IAAA;IAAA;IAAA;EAAA,QAAO;AAE1C;AAAC,KApEQhB,yBAAyB;AAsElC,eAAeA,yBAAyB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}